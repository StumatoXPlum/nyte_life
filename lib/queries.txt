// events near you
create table public.events_near_you (
  id uuid not null default gen_random_uuid (),
  image_name text not null,
  image_url text not null,
  created_at timestamp without time zone null default now(),
  title text null,
  description text null,
  rating double precision null,
  constraint events_near_you_pkey primary key (id)
) TABLESPACE pg_default;


// gig images table
create table public.gig_images (
  id serial not null,
  name text not null,
  url text not null,
  title text null,
  rating text null,
  description text null,
  constraint gig_images_pkey primary key (id)
) TABLESPACE pg_default;

// good events images
create table public.good_events_images (
  id serial not null,
  name text not null,
  url text not null,
  constraint good_events_images_pkey primary key (id)
) TABLESPACE pg_default;

// trending deals
create table public.trending_deals (
  id uuid not null default gen_random_uuid (),
  image_name text not null,
  image_url text not null,
  created_at timestamp without time zone null default now(),
  constraint trending_deals_pkey primary key (id)
) TABLESPACE pg_default;

// users
create table public.users (
  id uuid not null default gen_random_uuid (),
  phone_number text null,
  name text null,
  date_of_birth text null,
  gender text null,
  location text null,
  email text null,
  constraint users_pkey primary key (id)
) TABLESPACE pg_default;

// fodd food_preferences
create table public.food_preferences (
  id serial not null,
  category character varying(255) not null,
  option character varying(255) not null,
  is_active boolean null default true,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint food_preferences_pkey primary key (id)
) TABLESPACE pg_default;


// drinking prefs 
create table drinking_preferences (
  id serial primary key,
  question text not null,
  options jsonb not null 
);

// reviews
create table reviews (
  id uuid primary key default gen_random_uuid(),
  reviewer_name text not null,
  rating text not null check (rating ~ '^[1-5](\.[0-9])?$'),
  review text not null,
  created_at timestamp with time zone default now()
);
